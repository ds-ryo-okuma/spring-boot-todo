package com.example.springboottodo.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.springboottodo.entity.Todo;
import com.example.springboottodo.form.TodoForm;
import com.example.springboottodo.service.TodoService;

@Controller // This means that this class is a Controller
@RequestMapping(path="/todo") // This means URL's start with /demo (after Application path)
public class TodoController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private TodoService todoService;

  @GetMapping("/add")
  public String add(TodoForm todoForm) {
	  return "add";
  }
  
  @PostMapping(path="/add") // Map ONLY POST Requests
  public String addNewTodo (@Valid TodoForm todoForm, BindingResult bindingResult, @RequestParam String name) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
	  
	if (bindingResult.hasErrors()) {
		return "add";
	}

    Todo todo = new Todo();
    todo.setName(todoForm.getName());
    todoService.save(todo);
    return "redirect:/todo/list";
  }
  
  @GetMapping("/list")
  public String list(Model model) {
	  model.addAttribute("Todos", todoService.serchAll());
	  return "list";
  }
  
  @GetMapping("/show/{id}")
  public String show(Model model, @PathVariable Integer id) {
	  model.addAttribute("todo", todoService.findById(id).orElse(null));
	  return "show";
  }
  
  @DeleteMapping("/delete/{id}")
  public String deleteTodoById(@PathVariable Integer id) {
	  todoService.deleteById(id);
	  return "redirect:/todo/list";
  }
}